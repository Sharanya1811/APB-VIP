class apb_slave_driver extends uvm_driver#(apb_trans);
  `uvm_component_utils(apb_slave_driver)
  virtual apb_interface vif;
  apb_config cfg;
  
  extern function new(string name="apb_slave_driver",uvm_component parent);
  extern function void build_phase(uvm_phase phase);
  extern function void connect_phase(uvm_phase phase);
  extern task run_phase(uvm_phase phase);
  extern task reset();
  extern task drive_item(apb_trans req);
  extern task drive_write(apb_trans req);
  extern task drive_read(apb_trans req);
endclass  
    
  function apb_slave_driver::new(string name="apb_slave_driver",uvm_component parent);
    super.new(name,parent);
  endfunction
  
  function void apb_slave_driver::build_phase(uvm_phase phase);
    super.build_phase(phase);
    if(!uvm_config_db#(apb_config)::get(this,"","apb_config",cfg))
      `uvm_fatal(get_full_name(),"No interface is set")
  endfunction
  
  function void apb_slave_driver::connect_phase(uvm_phase phase);
    super.connect_phase(phase);
    vif=cfg.vif;
  endfunction
  
 task apb_slave_driver::run_phase(uvm_phase phase);
   reset();
    forever begin      
      seq_item_port.get_next_item(req);
      `uvm_info(get_full_name(),"HELLO",UVM_LOW)
      drive_item(req);
      seq_item_port.item_done();
    end
  endtask
  
 task apb_slave_driver::reset();
    vif.s_drv_cb.pready<=0;
 endtask
  
  task apb_slave_driver::drive_item(apb_trans req);
    if(req.pwrite==1)
      drive_write(req);
    else
      drive_read(req);
  endtask
  
  task apb_slave_driver::drive_write(apb_trans req);
    @(vif.s_drv_cb)
    if(vif.s_drv_cb.psel && vif.s_drv_cb.psel)
      begin
        #(req.wait_time);
        vif.s_drv_cb.pready<=1;
      end
    @(vif.s_drv_cb);
    vif.s_drv_cb.pready<=0;
  endtask
  
  task apb_slave_driver::drive_read(apb_trans req);
        @(vif.s_drv_cb)
    if(vif.s_drv_cb.psel && vif.s_drv_cb.psel)
      begin
        #(req.wait_time);
        vif.s_drv_cb.pready<=1;
        vif.s_drv_cb.prdata<=req.prdata;
      end
    @(vif.s_drv_cb);
    vif.s_drv_cb.pready<=0;
  endtask
  